# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
  pull_request:

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-13,        r: 'release', name: 'macos-13 (release)'}
          - {os: macos-14,        r: 'release', name: 'macos-14 (release)'}
          - {os: windows-latest , r: 'release', name: 'windows-latest (release)'}
          - {os: windows-latest,  r: '4.1',     name: 'windows-latest (4.1)'}
          - {os: ubuntu-latest,   r: 'devel',   name: 'ubuntu-latest (devel)', http-user-agent: 'release'}
          - {os: ubuntu-24.04,    r: 'release', name: 'ubuntu-24.04 (release)'}
          - {os: ubuntu-22.04,    r: 'release', name: 'ubuntu-22.04 (release)'}
          - {os: ubuntu-20.04,    r: 'release', name: 'ubuntu-20.04 (release)'}
          - {os: ubuntu-latest,   r: 'release', name: 'rocky-dockerized', tag: 'rocky'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Set job name
        run: echo "::set-output name=job_name::${{ matrix.config.name }}"

      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck

      - name: Check if Rocky Linux
        id: check_rocky
        run: echo "is_rocky=$([[ '${{ matrix.config.tag }}' == 'rocky' ]] && echo 'true' || echo 'false')" >> $GITHUB_ENV

      - name: Run on Ubuntu/Mac/Windows
        if: env.is_rocky != 'true'
        uses: r-lib/actions/check-r-package@v2

      - name: Run on Rocky Linux
        if: env.is_rocky == 'true'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace rocker/r-ver:4.1.0 bash -c "
            yum install -y epel-release &&
            yum install -y libcurl-devel openssl-devel libxml2-devel &&
            R -e 'install.packages(c(\"remotes\", \"rcmdcheck\"), repos=\"https://cloud.r-project.org\")' &&
            R CMD check ."
