#!/bin/sh

# Anticonf (tm) script by Pacha (2024)
# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Library settings
PKG_CONFIG_NAME_TESSERACT="tesseract"
PKG_DEB_NAME="tesseract-ocr libtesseract-dev libleptonica-dev"
PKG_RPM_NAME="tesseract-devel leptonica-devel"
PKG_BREW_NAME="tesseract"
PKG_TEST_HEADER_TESSERACT="<tesseract/baseapi.h>"
PKG_CFLAGS="-I/usr/include/tesseract -I/usr/include/leptonica"
PKG_LIBS="-ltesseract"

# Use pkg-config if available
pkg-config --version >/dev/null 2>&1
if [ $? -eq 0 ]; then
  PKGCONFIG_CFLAGS_TESSERACT=`pkg-config --cflags ${PKG_CONFIG_NAME_TESSERACT}`
  PKGCONFIG_LIBS_TESSERACT=`pkg-config --libs ${PKG_CONFIG_NAME_TESSERACT}`
fi

# Debugging information
echo "PKGCONFIG_CFLAGS_TESSERACT: $PKGCONFIG_CFLAGS_TESSERACT"
echo "PKGCONFIG_LIBS_TESSERACT: $PKGCONFIG_LIBS_TESSERACT"

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS_TESSERACT" ] || [ "$PKGCONFIG_LIBS_TESSERACT" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS="${PKGCONFIG_CFLAGS_TESSERACT}"
  PKG_LIBS="${PKGCONFIG_LIBS_TESSERACT}"
elif [ `uname` = "Darwin" ]; then
  test ! "$CI" && brew --version 2>/dev/null
  if [ $? -eq 0 ]; then
    BREWDIR=`brew --prefix`
    PKG_CFLAGS="-I$BREWDIR/include/tesseract -I$BREWDIR/include/leptonica"
    PKG_LIBS="-L$BREWDIR/lib $PKG_LIBS"
  else
    echo "Homebrew is not installed. Visit https://brew.sh/ for information on how to install it."
    echo "Tesseract can be installed with 'brew install tesseract'."
    exit 1
  fi
fi

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Tesseract 4 enforces C++11 in the headers but R does not have CXX11CPP
CPPFLAGS=`${R_HOME}/bin/R CMD config CPPFLAGS`
CXX11STD=`${R_HOME}/bin/R CMD config CXX11STD`
if [ $? -eq 0 ]; then
CXX11=`${R_HOME}/bin/R CMD config CXX11`
CXX11CPP="$CXX11 -E $CXX11STD"
else
CXX11CPP=`${R_HOME}/bin/R CMD config CXXCPP`
fi

# Test configuration
echo "Using CXX11CPP: ${CXX11CPP}"
${CXX11CPP} ${CPPFLAGS} ${PKG_CFLAGS} tools/test.cpp >/dev/null 2>configure.log

# Customize the error
if [ $? -ne 0 ]; then
  echo "--------------------------- [ANTICONF] --------------------------------"
  echo "Configuration failed to find system libraries. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, CentOS, RHEL)"
  echo " * brew: $PKG_BREW_NAME (Mac OSX)"
  echo "If the libraries are already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains the necessary .pc files. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "-------------------------- [ERROR MESSAGE] ---------------------------"
  cat configure.log
  echo "--------------------------------------------------------------------"
  exit 1
fi

# Create a temporary C++ file to test the compatibility with Tesseract
cat <<EOF > conftest.cpp
#include <tesseract/baseapi.h>
int main() {
    tesseract::TessBaseAPI api;
    return 0;
}
EOF

# Test Tesseract
# Tesseract enforces C++11
if ! ${CXX11} -std=gnu++11 -c conftest.cpp -o conftest.o ${PKG_CFLAGS}
then
    echo "Tesseract is not compatible with the C++ compiler used by R."
    rm -rf conftest.cpp conftest.o
    exit 1
else
    echo "Tesseract is compatible with the C++ compiler used by R."
    rm -rf conftest.cpp conftest.o
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0
