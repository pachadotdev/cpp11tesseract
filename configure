# Adapted from the script by Jeroen Ooms (2024)
# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

# Library settings
PKG_CONFIG_NAME="tesseract"
PKG_DEB_NAME="libtesseract-dev libleptonica-dev"
PKG_RPM_NAME="tesseract-devel leptonica-devel"
PKG_BREW_NAME="tesseract"
PKG_TEST_HEADER="<baseapi.h>"
PKG_CFLAGS="-I/usr/include/tesseract -I/usr/include/leptonica"
PKG_LIBS="-ltesseract"

# Use pkg-config if available
pkg-config --version >/dev/null 2>&1
if [ $? -eq 0 ]; then
  PKGCONFIG_CFLAGS=`pkg-config --cflags --silence-errors ${PKG_CONFIG_NAME}`
  PKGCONFIG_LIBS=`pkg-config --libs ${PKG_CONFIG_NAME}`
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS=${PKGCONFIG_CFLAGS}
  PKG_LIBS=${PKGCONFIG_LIBS}
elif [ `uname` = "Darwin" ]; then
  test ! "$CI" && brew --version 2>/dev/null
  if [ $? -eq 0 ]; then
    BREWDIR=`brew --prefix`
    echo "BREWDIR: $BREWDIR"
    PKG_CFLAGS="-I$BREWDIR/include -I$BREWDIR/include/leptonica"
    PKG_LIBS="-L$BREWDIR/lib $PKG_LIBS"
  else
    # Autobrew logic
    if [ "x${OSTYPE:6:1}" = "x1" ]; then
      bottle="https://github.com/autobrew/bundler/releases/download/tesseract-5.3.1/tesseract-5.0.1-high_sierra.tar.xz"
      LEPTONICA=lept
    else
      bottle="https://github.com/autobrew/bundler/releases/download/tesseract-5.3.2_1/tesseract-5.3.2_1-universal.tar.xz"
      MORELIBS="-lturbojpeg -lsharpyuv -larchive -lexpat -llzma -lzstd -llz4 -lb2 -lbz2 -liconv -framework Accelerate"
      LEPTONICA="leptonica"
    fi

    # Skip if disabled
    if [ "$DISABLE_AUTOBREW" ]; then return 0; fi
    echo "Using autobrew bundle: $(basename $bottle)"

    # General setup
    BREWDIR="$PWD/.deps"
    mkdir -p $BREWDIR
    curl -sSL $bottle -o libs.tar.xz
    tar -xf libs.tar.xz --strip 1 -C $BREWDIR
    rm -f libs.tar.xz

    # Hardcoded flags
    PKG_CFLAGS="-DBUILD_AUTOBREW -I${BREWDIR}/include -I${BREWDIR}/include/leptonica"
    PKG_LIBS="-L${BREWDIR}/lib -ltesseract -l${LEPTONICA} -lopenjp2 -lgif -lwebpmux -lwebp -lpng16 -ljpeg -ltiff -lcurl $MORELIBS -lz -lpthread"

    # Ship tesseract training data
    mkdir -p inst
    cp -Rf $BREWDIR/share/tessdata inst/
    echo "Copying training data"

    # Prevent CRAN builder from linking against old libs in /usr/local/lib
    for FILE in $BREWDIR/lib/*.a; do
      BASENAME=$(basename $FILE)
      LIBNAME=$(echo "${BASENAME%.*}" | cut -c4-)
      cp -f $FILE $BREWDIR/lib/libbrew$LIBNAME.a
      PKG_LIBS=$(echo $PKG_LIBS | sed "s/-l$LIBNAME /-lbrew$LIBNAME /g")
    done

    # Cleanup
    echo "rm -Rf .deps" >> cleanup
    chmod +x cleanup
  fi
fi

# For debugging
echo "Using PKG_CFLAGS=$PKG_CFLAGS"
echo "Using PKG_LIBS=$PKG_LIBS"

# Tesseract 4 enforces C++11 in the headers but R does not have CXX11CPP
CPPFLAGS=`${R_HOME}/bin/R CMD config CPPFLAGS`
CXX11STD=`${R_HOME}/bin/R CMD config CXX11STD`
if [ $? -eq 0 ]; then
  CXX11=`${R_HOME}/bin/R CMD config CXX11`
  CXX11CPP="$CXX11 -E $CXX11STD"
else
  CXX11CPP=`${R_HOME}/bin/R CMD config CXXCPP`
fi

# Test configuration
echo "Using CXX11CPP: ${CXX11CPP}"
${CXX11CPP} ${CPPFLAGS} ${PKG_CFLAGS} tools/test.cpp >/dev/null 2>configure.log

# Customize the error
if [ $? -ne 0 ]; then
  echo "--------------------------- [ANTICONF] --------------------------------"
  echo "Configuration failed to find '$PKG_CONFIG_NAME' system library. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, CentOS, RHEL)"
  echo " * brew: $PKG_BREW_NAME (Mac OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  echo "-------------------------- [ERROR MESSAGE] ---------------------------"
  cat configure.log
  echo "--------------------------------------------------------------------"
  exit 1
fi

# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0
